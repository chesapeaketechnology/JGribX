/*
 * Gradle build file for JGribX
 *
 * Target Gradle version: 7.3.3
 *
 * Reference: https://docs.gradle.org/7.3/userguide/building_java_projects.html
 *
 */
plugins {
    id "java"
    id "maven-publish"
}

version = '0.6.0-SNAPSHOT'
group 'mt.edu.um.cf2'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

publishing {
    publications {
        customLibrary(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = 'mt.edu.um.cf2.jgribx'
            url = layout.buildDirectory.dir("repo")
        }
    }
}

test {
    testLogging {
        events 'started', 'passed'
    }
}

configurations {
    extraLibs
    runtime
    ajc
    aspects
    expandedJars.transitive = false
    api {
        extendsFrom(aspects)
        extendsFrom(expandedJars)
    }
    testArtifacts.extendsFrom testRuntime
    offlinePluginDependency.extendsFrom(compileOnly)
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        // Expand all the project jars into the main jar so Raptor can find the CDI annotations
        (configurations.expandedJars).collect { zipTree(it) }
    }
    into('lib') {
        from((configurations.runtimeClasspath - configurations.offlinePluginDependency) - configurations.expandedJars)
        exclude 'log4j*'
        exclude 'slf4j*'
    }

    manifest {
        attributes 'Main-Class': 'mt.edu.um.cf2.jgribx.CommandLine'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    extraLibs(
            [group: 'commons-cli', name: 'commons-cli', version: '1.4'],
            ['org.slf4j:slf4j-api:1.7.25'],
            ['edu.ucar:jj2000:5.2']
    )
    configurations.implementation.extendsFrom(configurations.extraLibs)

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testImplementation 'junit:junit:4.13.1'
}
